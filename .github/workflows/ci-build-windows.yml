### Test Installing DEVSimPy on Windows (latest), using venv

### To use from DEVSimPy local repo: 
###   1. lauch Docker
###   2. open a powershell terminal
###   3. if act is not installed, execute: winget install nektos.act
###   4. restart the terminal
###   5. execute Ã  partir d'un os window: act -j build-windows -P windows-latest=-self-hosted

name: Windows build

on:
    push:
      branches:
        - master

jobs:
  build-windows:
    runs-on: windows-latest  # Windows-only runner
    strategy:
      max-parallel: 4
      fail-fast: true # Stop all jobs if one fails
      matrix:
        python-version: ['3.10','3.11','3.12','3.13']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Python with venv
        run: |
          python -m venv devsimpy_env
          devsimpy_env\Scripts\Activate.ps1
          python -m pip install --upgrade pip
      
      - name: Install DEVSimPy with pip
        run: | 
          python -m pip install devsimpy
      
      - name: Test DEVSimPy
        run: |
          devsimpy --nogui examples/model0/model0.dsp 10
          
        ### Test of diag and sub frame
      - name: Test DEVSimPy Frame and Dialog
        run: |

          python -m pip install wxpython>=4.2.2 PyPubSub psutil tomllib
          
          cd tests

          $FILES = @(
          "test_checkergui.py",
          "test_connectdialog.py",
          "test_detachedframe.py",
          "test_diagramconstantsdialog.py",
          "test_editor.py",
          "test_findgui.py",
          "test_ftpgui.py",
          "test_htmlwindow.py",
          "test_importlibrary.py",
          "test_labelgui.py",
          "test_preferencesgui.py",
          "test_prioritygui.py",
          "test_simulationgui.py",
          "test_wizardgui.py",
          "test_pluginsgui.py",
          "test_wxpymail.py",
          "test_aiprompterdialog.py",
          "test_simpleframeeditor.py",
          "test_yamlexportgui.py",
          "test_spreadsheet.py",
          "test_xmlmodule.py",
          "test_standalonegui.py"
          )

          foreach ($file in $FILES) {
            python $file --autoclose --nogui
          }

      ### Upload test results
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-test-results
          path: ./windows-test-results/